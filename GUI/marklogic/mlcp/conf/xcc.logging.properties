############################################################
#
# This is the MarkLogic XCC-specific logging properties file
# Properties set here will override any properties of the
# same name in the default $JAVA_HOME/lib/logging.properties
# file.  This file will be applied the first time a
# ContentSource object is instantiated, which could cause
# the formatting of non-XCC loggers to change at that time.
#
# This file will be searched for in your classpath, in the
# com.marklogic.xcc package with the name xcc.logging.properties
# A copy of this properties file is in the XCC jar file and
# is therefore always in the classpath.  To make changes,
# place another copy in your classpath ahead of xcc.jar.
#
# If either of the properties java.util.logging.config.class
# or java.util.logging.config.file is set, this file will
# be ignored and the explicit settings will be used.
# See the Javadoc page for java.util.logging.LogManager
#
############################################################

# System default is usually ConsoleHandler only.
# To also add the FileHandler, use the following line.
# The properties in $JAVA_HOME/lib/logging.properties
# related to file logging will also apply.
#handlers= java.util.logging.FileHandler, java.util.logging.ConsoleHandler
com.marklogic.xcc.handlers = java.util.logging.ConsoleHandler

# If you're only running XCC in this JVM, this
# is a helpful change.  Default is %h/java%u.log,
# which puts log files in your home directory.
# See the Javadoc page for java.util.logging.FileHandler
#java.util.logging.FileHandler.pattern = xcc%u.log

# For testing, setting this to ALL lets you control output
# with just one logger level for com.marklogic.xcc.level below.
# If using a file handler as well, you may prefer to leave
# it at INFO to suppress debug output.
#java.util.logging.ConsoleHandler.level = ALL

# This uses XCC's log formatter for console output which
# is much easier to read than the default.  Comment out
# this property to use the JVM default formatter.
java.util.logging.ConsoleHandler.formatter = com.marklogic.io.LogFormatter

# XCC uses the above custom formatter by default.  Set this to
# true to allow parent handlers to see logged messages as well.
# If the above formatter property is set and this property is
# true, you may see messages logged more than once.
com.marklogic.xcc.useParentHandlers = false

# The MarkLogic formatter is configurable via properties
# The .time-format property specifies a date/time format
# string as documented in the Javadoc page for the
# java.text.SimpleDateFormat class.  The default value
# is yyyy-MM-dd HH:mm:ss.SSS
#com.marklogic.io.LogFormatter.time-format = MM/dd/yy-HH:mm:ss

# The following properties control whether the corresponding
# fields are displayed in the log message.  The default
# value is true for all fields.
#com.marklogic.io.LogFormatter.show-time = true
#com.marklogic.io.LogFormatter.show-level = true
#com.marklogic.io.LogFormatter.show-thread = true
#com.marklogic.io.LogFormatter.show-location = true

# Change this to modify the level of XCC logging and leave the
# level of other loggers unchanged.

com.marklogic.xcc.level = WARNING
