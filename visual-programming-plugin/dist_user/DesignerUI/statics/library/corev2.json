[
  {
    "functionName": "GeoReproject",
    "blockName": "GeoReproject",
    "library": "geo",
    "inputs": [
      {
        "name": "srcCoordinateSystem",
        "type": "xs:string"
      },
      {
        "name": "targetCoordinateSystem",
        "type": "xs:string"
      },
      {
        "name": "strWKT",
        "type": "xs:string"
      }
    ],
    "outputs": [
      {
        "name": "strWKT",
        "type": "node"
      }
    ],
    "function": {
      "ref": "fn.doc",
      "code": null
    }


  },
  {
    "functionName": "fn_doc",
    "blockName": "fn_doc",
    "library": "MarkLogic API",
    "inputs": [
      {
        "name": "uri",
        "type": "xs:string"
      }
    ],
    "outputs": [
      {
        "name": "doc",
        "type": "node"
      }
    ],
    "function": {
      "ref": "fn.doc",
      "code": null
    }


  },
  {
    "functionName": "fn_collection",
    "blockName": "fn_collection",
    "library": "MarkLogic API",
    "inputs": [
      {
        "name": "collectionName",
        "type": "xs:string"
      }
    ],
    "outputs": [
      {
        "name": "docs",
        "type": "node()*"
      }
    ],
    "function": {
      "ref": "fn.collection",
      "code": null
    }


  },
  {
    "functionName": "fn_baseUri",
    "blockName": "fn_baseUri",
    "library": "MarkLogic API",
    "inputs": [
      {
        "name": "node",
        "type": "node"
      }
    ],
    "outputs": [
      {
        "name": "uri",
        "type": "xs:string"
      }
    ],
    "function": {
      "ref": "fn.baseUri",
      "code": null
    }


  },
  {
    "functionName": "fn_head",
    "blockName": "fn_head",
    "library": "MarkLogic API",
    "inputs": [
      {
        "name": "nodes",
        "type": null
      }
    ],
    "outputs": [
      {
        "name": "node",
        "type": null
      }
    ],
    "function": {
      "ref": "fn.head",
      "code": null
    }


  },
  {
    "functionName": "FormatDate",
    "blockName": "FormatDate",
    "library": "date",
    "inputs": [
      {
        "name": "inputDate",
        "type": "xs:string"
      }
    ],

    "widgets": [
      {
        "type": "text",
        "name": "format",
        "default": "DD/MM/YYYY",
        "values": []

      }

    ],
    "outputs": [
      {
        "name": "IsoDate",
        "type": "xs:string"
      }
    ],
    "function": {
      "ref": null,
      "code": null
    }
  },
  {
    "functionName": "CreateTriple",
    "blockName": "CreateTriple",
    "library": "triples",
    "inputs": [
      {
        "name": "subject",
        "type": "xs:string"
      },
      {
        "name": "object",
        "type": "xs:string"
      }
    ],

    "widgets": [

      {
        "type": "toggle",
        "name": "subjectIsIRI",
        "default": true,
        "values": []

      },
      {
        "type": "text",
        "name": "predicate",
        "default": "myPredicate",
        "values": []

      },
      {
        "type": "toggle",
        "name": "objectIsIRI",
        "default": true,
        "values": []

      }

    ],
    "outputs": [
      {
        "name": "triple",
        "type": null
      }
    ],
    "function": {
      "ref": null,
      "code": null
    }
  },
  {
    "functionName": "Split",
    "blockName": "Split",
    "library": "string",
    "inputs": [
      {
        "name": "string",
        "type": null
      }
    ],

    "widgets": [
      {
        "type": "text",
        "name": "splitChar",
        "default": "/",
        "values": []

      }],
    "outputs": [
      {
        "name": "v1",
        "type": null
      },
      {
        "name": "v2",
        "type": null
      },
      {
        "name": "v3",
        "type": null
      },
      {
        "name": "array",
        "type": null
      }
    ],
    "function": {
      "ref": null,
      "code": ""
    }
  },
  {
    "functionName": "FormatDateAuto",
    "blockName": "FormatDateAuto",
    "library": "date",
    "inputs": [
      {
        "name": "inputDate",
        "type": "xs:string"
      }
    ],
    "outputs": [
      {
        "name": "IsoDate",
        "type": "xs:string"
      }
    ],
    "function": {
      "ref": null,
      "code": ""
    }
  },
  {
    "functionName": "Lookup",
    "blockName": "Lookup",
    "library": "feature",
    "inputs": [
      {
        "name": "query",
        "type": null
      },
      {
        "name": "var1",
        "type": null
      },
      {
        "name": "var2",
        "type": null
      }

    ],

    "widgets": [
      {
        "type": "text",
        "name": "query",
        "default": "cts.collectionQuery(\"${var1}\")",
        "values": []

      },

      {
        "type": "text",
        "name": "valuePath",
        "default": "/path/to/value/string()",
        "values": []

      }],

    "outputs": [
      {
        "name": "value",
        "type": null
      }
    ],
    "function": {
      "ref": null,
      "code": ""
    }
  },
  {
    "functionName": "FormatDateTimeAuto",
    "blockName": "FormatDateTimeAuto",
    "library": "date",
    "inputs": [
      {
        "name": "inputDateTime",
        "type": "xs:string"
      }
    ],
    "outputs": [
      {
        "name": "IsoDateTime",
        "type": "xs:string"
      }
    ],
    "function": {
      "ref": null,
      "code": null
    }
  },

  {
    "functionName": "fn_upperCase",
    "blockName": "UpperCase",
    "library": "string",
    "inputs": [
      {
        "name": "string",
        "type": "xs:string"
      }
    ],
    "outputs": [
      {
        "name": "STRING",
        "type": "xs:string"
      }
    ],
    "function": {
      "ref": "fn.upperCase",
      "code": null
    }


  },
  {
    "functionName": "fn_lowerCase",
    "blockName": "LowerCase",
    "library": "string",
    "inputs": [
      {
        "name": "STRING",
        "type": "xs:string"
      }
    ],
    "outputs": [
      {
        "name": "string",
        "type": "xs:string"
      }
    ],
    "function": {
      "ref": "fn.lowerCase",
      "code": null
    }


  }
,
  {
    "functionName": "fn_count",
    "blockName": "fn_count",
    "library": "MarkLogic API",
    "inputs": [
      {
        "name": "list",
        "type": null
      }
    ],
    "outputs": [
      {
        "name": "nbItems",
        "type": "number"
      }
    ],
    "function": {
      "ref": "fn.count",
      "code": null
    }


  },
  {
    "functionName": "cts_andQuery",
    "blockName": "cts_andQuery",
    "library": "MarkLogic API",
    "inputs": [
      {
        "name": "query1",
        "type": "cts:query"
      },
      {
        "name": "query2",
        "type": "cts:query"
      },
      {
        "name": "query3",
        "type": "cts:query"
      },
      {
        "name": "query4",
        "type": "cts:query"
      }
    ],
    "outputs": [
      {
        "name": "query",
        "type": "cts:query"
      }
    ],
    "function": {
      "ref": null,
      "code": ""
    }


  },
  {
    "functionName": "cts_orQuery",
    "blockName": "cts_orQuery",
    "library": "MarkLogic API",
    "inputs": [
      {
        "name": "query1",
        "type": "cts:query"
      },
      {
        "name": "query2",
        "type": "cts:query"
      },
      {
        "name": "query3",
        "type": "cts:query"
      },
      {
        "name": "query4",
        "type": "cts:query"
      }
    ],
    "outputs": [
      {
        "name": "query",
        "type": "cts:query"
      }
    ],
    "function": {
      "ref": null,
      "code": ""
    }


  },
  {
    "functionName": "cts_search",
    "blockName": "cts_search",
    "library": "MarkLogic API",
    "inputs": [
      {
        "name": "query",
        "type": "cts:query"
      }
    ],
    "outputs": [
      {
        "name": "results",
        "type": ""
      }
    ],
    "function": {
      "ref": "cts.search",
      "code": null
    }


  },
  {
    "functionName": "fn_stringJoin",
    "blockName": "String join",
    "library": "string",
    "inputs": [
      {
        "name": "string*",
        "type": "xs:string*"
      }
    ],
    "properties": [
      {
        "name": "separator",
        "type": "xs:string"
      }

    ],
    "outputs": [
      {
        "name": "joinedString",
        "type": "xs:string"
      }
    ],
    "function": {
      "ref": "fn.stringJoin",
      "code": null
    }
  },
  {
    "functionName": "mapValues",
    "blockName": "Map values",
    "library": "string",
    "inputs": [
      {
        "name": "value",
        "type": "xs:string"
      }
    ],
    "properties": [
      {
        "name": "mapping",
        "type": [{"source": "srcVal", "target": "targetVal"}]
      }

    ],
    "outputs": [
      {
        "name": "mappedValue",
        "type": "xs:string"
      }
    ],
    "function": {
      "ref": null,
      "code": ""


  }
}
,
  {
    "functionName": "cts_collectionQuery",
    "blockName": "cts_collectionQuery",
    "library": "MarkLogic API",
    "inputs": [
      {
        "name": "collectionName",
        "type": "xs:string"
      }
    ],
    "outputs": [
      {
        "name": "query",
        "type": "cts:query"
      }
    ],
    "function": {
      "ref": "cts.collectionQuery",
      "code": null
    }


  },
  {
    "functionName": "json_validate",
    "blockName": "Json (schema) validate*",
    "library": "controls",
    "inputs": [
      {
        "name": "node",
        "type": "node"
      }
    ],
    "outputs": [
      {
        "name": "node",
        "type": "node"
      }
    ],
    "function": {
      "ref": null,
      "code": null
    }


  },
  {
    "functionName": "schematron_validate",
    "blockName": "Schematron validation*",
    "library": "controls",
    "inputs": [
      {
        "name": "doc",
        "type": null
      }
    ],
    "outputs": [
      {
        "name": "SVRL",
        "type": "node"
      }
    ],
    "function": {
      "ref": null,
      "code": null
    }


  },
  {
    "functionName": "isNumber",
    "blockName": "isNumber*",
    "library": "controls",
    "inputs": [
      {
        "name": "value",
        "type": null
      }
    ],
    "outputs": [
      {
        "name": "status",
        "type": "bool"
      }
    ],
    "function": {
      "ref": null,
      "code": null
    }


  },
  {
    "functionName": "isDate",
    "blockName": "isDate*",
    "library": "controls",
    "inputs": [
      {
        "name": "value",
        "type": null
      }
    ],
    "outputs": [
      {
        "name": "status",
        "type": "bool"
      }
    ],
    "function": {
      "ref": null,
      "code": null
    }


  },
  {
    "functionName": "isInDictionnary",
    "blockName": "isInDictionnary*",
    "library": "controls",
    "inputs": [
      {
        "name": "value",
        "type": null
      }
    ],
    "outputs": [
      {
        "name": "status",
        "type": "bool"
      }
    ],
    "function": {
      "ref": null,
      "code": null
    }


  },
  {
    "functionName": "checkRequiredFields",
    "blockName": "checkRequiredFields*",
    "library": "controls",
    "inputs": [
      {
        "name": "node",
        "type": null
      }
    ],
    "outputs": [
      {
        "name": "status",
        "type": "bool"
      }
    ],
    "function": {
      "ref": null,
      "code": null
    }


  }
,
  {
    "functionName": "cts_jsonPropertyValueQuery",
    "blockName": "cts_jsonPropertyValueQuery",
    "library": "MarkLogic API",
    "inputs": [
      {
        "name": "property",
        "type": "xs:string"
      },
      {
        "name": "value",
        "type": "xs:string"
      }
    ],
    "outputs": [
      {
        "name": "query",
        "type": "cts:query"
      }
    ],
    "function": {
      "ref": "cts.jsonPropertyValueQuery",
      "code": null
    }


  }
,

  {
    "functionName": "applyXSLT",
    "blockName": "Apply XSLT*",
    "library": "transform",
    "inputs": [
      {
        "name": "doc",
        "type": "node"
      }

    ],
    "outputs": [

      {
        "name": "doc",
        "type": "node"
      }
    ],
    "function": {
      "ref": null,
      "code": ""
    }

  },
  {
    "functionName": "addProperty",
    "blockName": "Add property",
    "library": "transform",
    "inputs": [
      {
        "name": "doc",
        "type": "node"
      },
      {
        "name": "value",
        "type": null
      }

    ],

    "properties": [
      {
        "name": "propertyName",
        "type": "Property name"
      }

    ],
    "outputs": [

      {
        "name": "doc",
        "type": "node"
      }
    ],
    "function": {
      "ref": null,
      "code": ""
  }

},
  {
    "functionName": "array",
    "blockName": "Array",
    "library": "basic",
    "inputs": [

      {
        "name": "item1",
        "type": null
      }, {
        "name": "item2",
        "type": null
      }, {
        "name": "item3",
        "type": null
      }, {
        "name": "item4",
        "type": null
      }, {
        "name": "item5",
        "type" :null
      }

    ],
    "outputs": [

      {
        "name": "array",
        "type": null
      }
    ],
    "function": {
      "ref": null,
      "code": ""
    }

  },
  {
    "functionName": "uuidString",
    "blockName": "uuid",
    "library": "string",
    "inputs": [],

    "widgets": [
      {
        "type": "text",
        "name": "prefix",
        "default": "/prefix/",
        "values": []

      }

    ],
    "properties": [],
    "outputs": [

      {
        "name": "uuid",
        "type": null
      }
    ],
    "function": {
      "ref": null,
      "code": ""
    }

  },
  {
    "functionName": "provo",
    "blockName": "PROV-O structure",
    "library": "provenance",
    "inputs": [
      {
        "name": "DerivedFrom1",
        "type": null
      },
      {
        "name": "DerivedFrom2",
        "type": null
      },
      {
        "name": "DerivedFrom3",
        "type": null
      },
      {
        "name": "GeneratedBy",
        "type": null
      },
      {
        "name": "createdOn",
        "type": null
      }
    ],
    "properties": [],
    "outputs": [
      {
        "name": "PROV-O",
        "type": "node"
      }
    ],
    "function": {
      "ref": null,
      "code": ""
    }
  },
  {
    "functionName": "DHFStepInput",
    "blockName": "Step Input",
    "library": "DHF",
    "inputs": [


    ],
    "properties": [],
    "outputs": [
      {
        "name": "input",
        "type": null
      },
      {
        "name": "uri",
        "type": null
      },{
        "name": "collections",
        "type": null
      }
    ],
    "function": {
      "ref": null,
      "code": ""
    }
  },

  {
    "functionName": "DHFStepOutput",
    "blockName": "Step Output",
    "library": "DHF",
    "inputs": [
      {
        "name": "input",
        "type": null
      },
      {
        "name": "uri",
        "type": null
      },{
        "name": "collections",
        "type": null
      }

    ],
    "properties": [],
    "outputs": [

    ],
    "function": {
      "ref": null,
      "code": ""
    }
  },
  {
    "functionName": "DHFEnvelope",
    "blockName": "Envelope",
    "library": "DHF",
    "inputs": [
      {
        "name": "headers",
        "type": null
      },
      {
        "name": "triples",
        "type": null
      },{
        "name": "instance",
        "type": null
      },{
        "name": "attachments",
        "type": null
      },{
        "name": "uri",
        "type": null
      },{
        "name": "collections",
        "type": null
      }
    ],
    "properties": [],
    "outputs": [

    ],
    "function": {
      "ref": null,
      "code": ""
    }
  }

]
